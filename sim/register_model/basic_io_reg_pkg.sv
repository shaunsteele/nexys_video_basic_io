
// This file was autogenerated by PeakRDL-uvm
package basic_io_reg_pkg;
    `include "uvm_macros.svh"
    import uvm_pkg::*;
    
    // Reg - basic_io_reg_block::LD
    class basic_io_reg_block__LD extends uvm_reg;
        rand uvm_reg_field LD;

        function new(string name = "basic_io_reg_block__LD");
            super.new(name, 8, UVM_NO_COVERAGE);
        endfunction : new

        virtual function void build();
            this.LD = new("LD");
            this.LD.configure(this, 8, 0, "RW", 0, 'h0, 1, 1, 0);
        endfunction : build
    endclass : basic_io_reg_block__LD

    // Reg - basic_io_reg_block::SW
    class basic_io_reg_block__SW extends uvm_reg;
        rand uvm_reg_field SW;

        function new(string name = "basic_io_reg_block__SW");
            super.new(name, 8, UVM_NO_COVERAGE);
        endfunction : new

        virtual function void build();
            this.SW = new("SW");
            this.SW.configure(this, 8, 0, "RO", 1, 'h0, 1, 1, 0);
        endfunction : build
    endclass : basic_io_reg_block__SW

    // Reg - basic_io_reg_block::BTN
    class basic_io_reg_block__BTN extends uvm_reg;
        rand uvm_reg_field BTND;
        rand uvm_reg_field BTNR;
        rand uvm_reg_field BTNC;
        rand uvm_reg_field BTNL;
        rand uvm_reg_field BTNU;
        rand uvm_reg_field RSVD;

        function new(string name = "basic_io_reg_block__BTN");
            super.new(name, 8, UVM_NO_COVERAGE);
        endfunction : new

        virtual function void build();
            this.BTND = new("BTND");
            this.BTND.configure(this, 1, 0, "RO", 1, 'h0, 1, 1, 0);
            this.BTNR = new("BTNR");
            this.BTNR.configure(this, 1, 1, "RO", 1, 'h0, 1, 1, 0);
            this.BTNC = new("BTNC");
            this.BTNC.configure(this, 1, 2, "RO", 1, 'h0, 1, 1, 0);
            this.BTNL = new("BTNL");
            this.BTNL.configure(this, 1, 3, "RO", 1, 'h0, 1, 1, 0);
            this.BTNU = new("BTNU");
            this.BTNU.configure(this, 1, 4, "RO", 1, 'h0, 1, 1, 0);
            this.RSVD = new("RSVD");
            this.RSVD.configure(this, 3, 5, "RO", 0, 'h0, 1, 1, 0);
        endfunction : build
    endclass : basic_io_reg_block__BTN

    // Addrmap - basic_io_reg_block
    class basic_io_reg_block extends uvm_reg_block;
        rand basic_io_reg_block__LD LD;
        rand basic_io_reg_block__SW SW;
        rand basic_io_reg_block__BTN BTN;

        function new(string name = "basic_io_reg_block");
            super.new(name);
        endfunction : new

        virtual function void build();
            this.default_map = create_map("reg_map", 0, 1, UVM_NO_ENDIAN);
            this.LD = new("LD");
            this.LD.configure(this);

            this.LD.build();
            this.default_map.add_reg(this.LD, 'h0);
            this.SW = new("SW");
            this.SW.configure(this);

            this.SW.build();
            this.default_map.add_reg(this.SW, 'h1);
            this.BTN = new("BTN");
            this.BTN.configure(this);

            this.BTN.build();
            this.default_map.add_reg(this.BTN, 'h2);
        endfunction : build
    endclass : basic_io_reg_block

endpackage: basic_io_reg_pkg
